install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm)
boxplot(ppm,col="blue")
abline(h=12)
hist(ppm,col="green")
rug(ppm)
low
high
hist(ppm,col="green",breaks=100)
rug(ppm)
hist(ppm,col="green")
abline(v=12)
abline(v=12,lwd=2)
abline(v=median(ppm),col="magenta",lwd=4)
names(pollution)
reg <- table(pollution$region)
barplot(reg)
reg
barplot(reg)
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1),mar=c(4,4,2,1))
east<-subset(pollution,region=='east')
head(east)
hist(east$pm25, col="green")
hist(subset(pollution,region=="west")$pm25, col = "green")
with(pollution,plot(latitude , pm25))
abline(h=12,lwd=2,lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12,lwd=2,lty=2)
par(mfrow = c(1, 2), mar = c(5, 4, 2, 1))
west <- subset(pollution,region=="west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
fileURL <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
download.file(fileURL, destfile = './NEI.zip')
pwd
pswd
# set directory to folder where file is locationed (household_power_consumption.txt)
nei.directory <- "C:/github/ExData_Plotting_NEI"
setwd(nei.directory)
fileURL <- 'https://d396qusza40orc.cloudfront.net/exdata%2Fdata%2FNEI_data.zip'
download.file(fileURL, destfile = './NEI.zip')
unzip('NEI.zip')
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
head(NEI,10)
head(CSS,10)
head(SCC,10)
head(SCC,1)
head(SCC,1)
names(SCC)
SCC[1-3,]
SCC[1-3,1-5]
SCC[1,1]
head(NEI,10)
summarize(NEI)
summary(NEI)
NEI[4:6,]
NEI[:4,6]
NEI %>%
group_by(year) %>%
summarize(sum(Emissions))
library(dplyr)
install(dplyr)
install.packages(dplyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
NEI %>%
group_by(year) %>%
summarize(sum(Emissions))
head(NEI.Emissions.Year)
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
NEI.Emissions.Year <- NEI %>% group_by(year) %>% summarize(sum(Emissions))
NEI.Names <- c('Year','Total Emissions')
colnames(NEI.Emissions.Year) <-NEI.Names
head(NEI.Emissions.Year)
# setup the png file and create graphic
png(filename="./plot1.png",width=480,height=480,units="px")
## Read in the data. The first file will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Summarize the Emissions data by year
NEI.Emissions.Year <- NEI %>% group_by(year) %>% summarize(sum(Emissions))
NEI.Names <- c('Year','TotalEmissions')
colnames(NEI.Emissions.Year) <-NEI.Names
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
## Read in the data. The first file will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
## Summarize the Emissions data by year
NEI.Emissions.Year <- NEI %>% group_by(year) %>% summarize(sum(Emissions))
NEI.Names <- c('Year','TotalEmissions')
colnames(NEI.Emissions.Year) <-NEI.Names
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
bb <- dev.off()
NEI.Emissions.Year
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
with(NEI.Emissions.Year, lines(Year, TotalEmissions, type=1))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
with(NEI.Emissions.Year, lines(Year, TotalEmissions, type='l'))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
with(NEI.Emissions.Year, lines(Year, TotalEmissions, type='l'))
with(NEI.Emissions.Year, ititle(main='Total PM2.5 Emissions From All Sources by Year'))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
with(NEI.Emissions.Year, lines(Year, TotalEmissions, type='l'))
with(NEI.Emissions.Year, ititle(main='Total PM2.5 Emissions From All Sources by Year'))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
# Create the png file
png(filename="./plot1.png",width=480,height=480,units="px")
#Plot the data
with(NEI.Emissions.Year,plot(Year,TotalEmissions,xlab='Year',ylab='Total Emissions'))
with(NEI.Emissions.Year, points(Year, TotalEmissions, pch = 19))
with(NEI.Emissions.Year, lines(Year, TotalEmissions, type='l'))
with(NEI.Emissions.Year, title(main='Total PM2.5 Emissions From All Sources by Year'))
## clean up the memory and close off the graphic device
#bb <- rm(list=ls())
bb <- dev.off()
install.packages("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
library(swirl)
install.packages("swirl")
#install_from_swirl("Getting and Cleaning Data")
install_from_swirl("Exploratory Data Analysis")
library(swirl)
ls()
rm(list=ls())
install_from_swirl("Exploratory Data Analysis")
swirl()
head(airquality)
range(airquality$Ozone,na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone~Month,airquality)
boxplot(Ozone~Month,airquality,xlab='Month',ylab='Ozone (ppb)', col.axis="blue",col.lab="read")
boxplot(Ozone~Month,airquality,xlab='Month',ylab='Ozone (ppb)', col.axis="blue",col.lab="red")
title(main="Ozone and Wind in New York City")
with(airquality,plot(Wind~Ozone))
with(airquality,plot(Wind,Ozone))
title(main="Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par('fg')
par("pch")
par("lty")
plot(airquality$Wind,airquality$Ozone,type="n")
title(main='Wind and Ozone in NYC')
may <- airquality[,months==5]
may <- airquality[months==5,]
may <- airquality[months==5:
]
may <- airquality[months==5,]
names(airquality)
may <- airquality[month.abb==5,]
may<-subset(airquality,Month==5)
par(pch())
points(may$Wind,may$Ozone,pch=1)
points(may$Wind,may$Ozone,col="blue",pch=17)
notmay<-subset(airquality,Month<>5)
notmay<-subset(airquality,Month!=5)
points(notmay$Wind,may$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=17)
points(notmay$Wind,notmay$Ozone,col="red",pch=8)
legend("topright",pch=c(17,8),col=c("blue","red"),legend = c("May","Other Months"))
abline(lty=2,lw=2)
abline(v=median(airquality$Wind),lty=2,lw=2)
abline(v=median(airquality$Wind),lty=2,lwd=2)
par(mfrow=c(1,2))
